if __name__ == '__main__':
    # GRADE 1. ЭТАП 3. Задание 5.

    import datetime
    from create_note_function import *
    from display_notes_function import *
    from update_note_function import *
    from search_notes_function import *
    from colorama import init, Fore  # Библиотека для раскрашивания консоли

    init(autoreset=True)  # Авто сброс покраски строчек

    # Укрощение colorama цветов
    r = Fore.RED
    m = Fore.MAGENTA
    c = Fore.CYAN
    g = Fore.GREEN
    lg = Fore.LIGHTGREEN_EX
    y = Fore.YELLOW

    # Список словарей с предустановленными заметками
    notes_lst = [{'Имя пользователя': 'Влад',
                  'Темы': ['Тестовый заголовок 1 в заметке Влада', 'Тестовый заголовок 2 в заметке Влада'],
                  'Описание': 'Тестовое описание-1 в заметке влада',
                  'Статус': 'Активна',
                  'Создана': '15-12-2024',
                  'Дата завершения': '15-12-2024'
                  },
                 {'Имя пользователя': 'Елена',
                  'Темы': ['Тестовый заголовок 1 в заметке Елены'],
                  'Описание': 'Тестовое описание-2 в заметке Елены',
                  'Статус': 'Активна',
                  'Создана': '15-12-2024',
                  'Дата завершения': '10-01-2025'
                  },
                 {'Имя пользователя': 'Павел',
                  'Темы': ['Тестовый заголовок 3 в заметке Павла'],
                  'Описание': 'Тестовое описание-3 в заметке Павла',
                  'Статус': 'Отложена',
                  'Создана': '15-12-2024',
                  'Дата завершения': '02-01-2025'
                  },
                 {'Имя пользователя': 'Зульфия',
                  'Темы': ['Тестовый заголовок 4 в заметки Зульфии'],
                  'Описание': 'Тестовое описание-4 в заметке Зульфии',
                  'Статус': 'Выполнена',
                  'Создана': '15-12-2024',
                  'Дата завершения': '01-01-1996'
                  }
                 ]

    print(g + '* * ВАС ПРИВЕТСТВУЕТ МЕНЕДЖЕР ЗАМЕТОК 1.3.5 * *')
    print(y + datetime.datetime.strftime(datetime.datetime.now(), "* * %d-%m-%Y, %H:%M"))
    print('* * Рекомендуемый масштаб консоли - 11 pt')
    # ___________ОСНОВНОЙ ЦИКЛ ПРОГРАММЫ____________
    while True:
        # Командное меню
        print(c + '\nВыберите команду, соответствующую пункту меню:'
                  '\n○ Добавить новую заметку  — 1 '
                  '\n○ Показать список заметок — 2 '
                  '\n○ Редактировать заметку   — 3 '
                  '\n○ Удалить заметку         — 4 '
                  '\n○ Найти заметку           — 5 '
                  '\n○ Завершить работу        — 6')

        # Пользовательский ввод команды
        command_add = input(m + '\nВведите команду: ')

        # ____КОМАНДА 1______Добавление новой заметки
        if command_add == '1':
            notes_lst.append(create_note())  # Ф-ия добавления
            console_pause()  # Ф-ия паузы

        # ____КОМАНДА 2______Показать список заметок
        elif command_add == '2':
            display_notes(notes_lst)  # Ф-ия отрисовки
            console_pause()  # Ф-ия паузы

        # ____КОМАНДА 3______Редактирование заметки
        elif command_add == '3':
            display_notes(notes_lst)  # Ф-ия отрисовки
            # Выбор заметки для обновления:
            print(c + '\nУкажите номер заметки, которую следует обновить')
            change_note = int(input(m + '\nВведите номер: '))
            add_note_dict = notes_lst[(change_note - 1)]

            update_note(add_note_dict)  # Ф-ия обновления (на базе функции создания для экономии кода)
            console_pause()  # Ф-ия паузы

        # ____КОМАНДА 4______Удаление заметки
        if command_add == '4':
            print(y + 'ФУНКЦИЯ В РАЗРАБОТКЕ')
            console_pause()  # Ф-ия паузы
            pass  # Заглушка

        # ____КОМАНДА 5______Найти заметку
        elif command_add == '5':
            print(c + '\nПрограмма запрашивает ввод ключевого слова и / или статуса.\n'
                      'Для отключения модуля поиска — пустой ввод')

            # ПОИСК ПО КЛЮЧЕВОЙ ФРАЗЕ
            search_keyword = input(m + '\nВведите ключевую фразу: ').lower()

            # Если пустая или пробелы => поиск по этому модулю выкл.
            if search_keyword == '' or search_keyword.isspace():
                search_keyword = None
                print(r + '\nПоиск по ключевой фразе выключен')
            else:
                print(g + '\nПоиск по ключевой фразе активирован')

            # ПОИСК ПО СТАТУСУ ЗАМЕТКИ
            print(c + '\nВыберите статус для поиска: '
                      '\n○ Активна          — 1; '
                      '\n○ Отложена         — 2; '
                      '\n○ Выполнена        — 3; '
                      '\n○ Ввести статус    — 4.')

            status_search_command = input(m + '\nВведите команду: ')

            # Командное меню поиска по статусу
            if status_search_command == '1':
                search_status = 'активна'
                print(g + '\nПоиск по статусу активирован')

            elif status_search_command == '2':
                search_status = 'отложена'
                print(g + '\nПоиск по статусу активирован')

            elif status_search_command == '3':
                search_status = 'выполнена'
                print(g + '\nПоиск по статусу активирован')

            elif status_search_command == '4':
                search_status = input(m + '\nВведите статус для поиска: ').lower()

                # Если пустая или пробелы => поиск по этому модулю выкл.
                if search_status == '' or search_status.isspace():
                    search_status = None
                    print(r + '\nПоиск по статусу выключен')

                else:
                    print(g + '\nПоиск по статусу активирован')
            else:
                # Если другая команда => поиск по этому модулю выкл.
                search_status = None
                print(r + '\nПоиск по статусу выключен')

            search_notes(notes_lst, search_keyword, search_status)  # Ф-ия поиска
            console_pause()  # Ф-ия паузы

        elif command_add == '6':
            break

        else:
            print(r + '\n(!) Такой команды не существует! Пожалуйста, введите доступную команду.')
            continue
